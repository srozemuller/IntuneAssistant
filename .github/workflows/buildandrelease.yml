name: Build and Release Binaries

on:
  push:
    tags:
      - '*'
  workflow_dispatch:
jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Setup .NET
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '7.0.403' # adjust this to your .NET version
      - name: Get the version
        id: get_version
        run: echo ::set-output name=VERSION::${GITHUB_REF#refs/tags/}
      - name: Get previous tag version
        id: get_previous_version
        run: echo ::set-output name=PREVIOUSVERSION::git describe --tags $(git rev-list --tags --max-count=1)
      - name: Print the version
        run: |
            echo "Tag previous tag name is ${{ steps.get_version.outputs.VERSION }}"
            echo "Tag name is ${{ steps.get_previous_version.outputs.PREVIOUSVERSION }}"
      - name: Build & archive binaries
        run: |
          cd ./IntuneAssistant.Cli
          dotnet publish -c Release -r linux-x64 -p:PublishSingleFile=true -o ./publish/linux-x64
          dotnet publish -c Release -r win-x64 -p:PublishSingleFile=true -o ./publish/win-x64
          dotnet publish -c Release -r osx-x64 -p:PublishSingleFile=true -o ./publish/osx-x64
          dotnet publish -c Release -r osx-arm64 -p:PublishSingleFile=true -o ./publish/osx-arm64

          zip linux-x64-${{ steps.get_version.outputs.VERSION }}.zip ./publish/linux-x64/intuneCli
          zip osx-x64-${{ steps.get_version.outputs.VERSION }}.zip ./publish/osx-x64/intuneCli
          zip osx-arm64-${{ steps.get_version.outputs.VERSION }}.zip ./publish/osx-arm64/intuneCli
          zip win-x64-${{ steps.get_version.outputs.VERSION }}.zip ./publish/win-x64/intuneCli.exe
      - name: Create NuGet package
        run: |
          cd ./IntuneAssistant.Cli
          dotnet pack -c Release -p:PackageVersion=${{ steps.get_version.outputs.VERSION }} -o .
      - name: "Configuration without Checkout"
        id: without_checkout
        uses: mikepenz/release-changelog-builder-action@develop
        with:
            fromTag: ${{ steps.get_version.outputs.PREVIOUSVERSION }}
            toTag: ${{ steps.get_version.outputs.VERSION }}
            configurationJson: |
                {
                "template": "#{{CHANGELOG}}\n\n<details>\n<summary>Uncategorized</summary>\n\n#{{UNCATEGORIZED}}\n</details>",
                "categories": [
                    {
                        "title": "## ‚ùóÔ∏è Breaking!!!",
                        "labels": ["breaking"]
                    },
                    {
                        "title": "## üöÄ Features",
                        "labels": ["feature"]
                    },
                    {
                        "title": "## üêõ Fixes",
                        "labels": ["bug"]
                    },
                    {
                        "title": "## üìù Refactor",
                        "labels": ["refactor"]
                    },
                    {
                        "title": "## üìÑ Documentation",
                        "labels": ["documentation"]
                    },
                    {
                        "title": "## üß™ Tests",
                        "labels": ["test"]
                    },
                    {
                        "title": "## üí¨ Other",
                        "labels": ["other"]
                    },
                    {
                        "title": "## üì¶ Dependencies",
                        "labels": ["dependencies"]
                    }
                ]
                }
        env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.get_version.outputs.VERSION }}
          release_name: Release ${{ steps.get_version.outputs.VERSION }}
          draft: false
          prerelease: false
          body: ${{ steps.without_checkout.outputs.changelog }}
      - name: Upload Release Asset - Linux
        id: upload-release-asset-linux
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./IntuneAssistant.Cli/linux-x64-${{ steps.get_version.outputs.VERSION }}.zip
          asset_name: linux-x64-${{ steps.get_version.outputs.VERSION }}.zip
          asset_content_type: application/octet-stream
      - name: Upload Release Asset - Windows
        id: upload-release-asset-windows
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./IntuneAssistant.Cli/win-x64-${{ steps.get_version.outputs.VERSION }}.zip
          asset_name: win-x64-${{ steps.get_version.outputs.VERSION }}.zip
          asset_content_type: application/octet-stream

      - name: Upload Release Asset - macOS
        id: upload-release-asset-macos
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./IntuneAssistant.Cli/osx-x64-${{ steps.get_version.outputs.VERSION }}.zip
          asset_name: osx-x64-${{ steps.get_version.outputs.VERSION }}.zip
          asset_content_type: application/octet-stream

      - name: Upload Release Asset - macOS
        id: upload-release-asset-macos-arm64
        uses: actions/upload-release-asset@v1
        env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
            upload_url: ${{ steps.create_release.outputs.upload_url }}
            asset_path: ./IntuneAssistant.Cli/osx-arm64-${{ steps.get_version.outputs.VERSION }}.zip
            asset_name: osx-arm64-${{ steps.get_version.outputs.VERSION }}.zip
            asset_content_type: application/octet-stream
      - name: Upload NuGet package asset
        id: upload-release-asset-nuget
        uses: actions/upload-release-asset@v1
        env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
            upload_url: ${{ steps.create_release.outputs.upload_url }}
            asset_path: ./IntuneAssistant.Cli/IntuneCLI${{ steps.get_version.outputs.VERSION }}.nupkg
            asset_name: IntuneCLI${{ steps.get_version.outputs.VERSION }}.nupkg
            asset_content_type: application/octet-stream
      - name: Push to NuGet
        run: dotnet nuget push "./IntuneAssistant.Cli/*.nupkg" --api-key ${{secrets.NUGET_APIKEY}} --source https://api.nuget.org/v3/index.json